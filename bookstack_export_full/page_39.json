{
  "id": 39,
  "title": "The Future of Development: A Conversational Approach",
  "slug": "the-future-of-development-a-conversational-approach",
  "url": "https://knowledge.oculair.ca/books/unknown/page/the-future-of-development-a-conversational-approach",
  "updated_at": "2025-02-17T04:51:54.000000Z",
  "body_html": "<h1 id=\"bkmrk-building-a-notes-app\">Building a Notes App: A Conversational Journey with Letta and OpenHands</h1>\n<p id=\"bkmrk-\"><a href=\"https://knowledge.oculair.ca/uploads/images/gallery/2025-02/download-1-copy.png\"><img src=\"https://knowledge.oculair.ca/uploads/images/gallery/2025-02/scaled-1680-/download-1-copy.png\" alt=\"download (1) - Copy.png\"></a></p>\n<h2 id=\"bkmrk-introduction\">Introduction</h2>\n<p id=\"bkmrk-ever-wanted-to-see-h\">Ever wanted to see how AI could help you build software in a truly collaborative way? I recently embarked on a project to create a simple notes app, and the entire process was a conversation with my digital companion, Letta. It was a fascinating experience that highlighted the potential of agentic workflows in software development. This isn't just about automation; it's about working <em>with</em> AI in a natural and intuitive way.</p>\n<h2 id=\"bkmrk-the-project%3A-a-simpl\">The Project: A Simple Notes App</h2>\n<p id=\"bkmrk-the-goal-was-straigh\">The goal was straightforward: create a basic application where I could add and view notes. But instead of diving straight into code, I used this as an opportunity to explore a conversational approach to development, leveraging Letta and OpenHands (a powerful agent for leading SWE benchmarks and running code in a sandboxed environment).</p>\n<h2 id=\"bkmrk-our-conversational-w\">Our Conversational Workflow</h2>\n<p id=\"bkmrk-instead-of-a-rigid-s\">Instead of a rigid set of steps, our development process felt more like a discussion. Here's how it unfolded:</p>\n<ol id=\"bkmrk-getting-started%3A-i-t\">\n<li><strong>Getting Started:</strong> I told Letta I wanted a notes app with basic <code>add_note</code> and <code>view_notes</code> functionality. That was it – the initial brief was a simple statement of intent.</li>\n<li><strong>First Steps:</strong> Letta's project lead, Opson, requested features from OpenHands. Opson then reviewed the output and asked for revisions. Sometimes, Opson would come back to me (Pansil) with options.</li>\n<li><strong>Making it Persistent:</strong> We talked about different ways to store the notes permanently. We considered just using files, but ultimately decided on SQLite, a simple yet powerful database. Opson handled the integration using SQLAlchemy, a neat tool that makes working with databases in Python much easier.</li>\n<li><strong>Adding a User Interface:</strong> I wanted something a bit more user-friendly than typing commands, so I asked for a web interface. Opson quickly built a basic frontend using HTML and JavaScript, giving me a visual way to interact with the app.</li>\n<li><strong>Troubleshooting:</strong> We hit a snag – the notes weren't showing up after I added them! But, working together, we identified the problem: some issues with the database initialization and how the data was flowing between the backend and the frontend. Opson quickly fixed it, and we were back in business.</li>\n</ol>\n<h2 id=\"bkmrk-key-enhancements\">Key Enhancements</h2>\n<p id=\"bkmrk-based-on-opson%27s-fee\">Based on Opson's feedback, here are some key enhancements we considered:</p>\n<ul id=\"bkmrk-specific-endpoints%3A-\">\n<li><strong>Specific Endpoints:</strong> The app uses <code>/add_note</code> for adding notes and <code>/view_notes</code> for viewing them.</li>\n<li><strong>Additional Features:</strong> We could add features like tags, timestamps, and auto-refresh for a better user experience.</li>\n<li><strong>Real-time Collaboration:</strong> Future versions could explore real-time collaboration features.</li>\n</ul>\n<h2 id=\"bkmrk-what-made-this-speci\">What Made This Special: The Conversational Element</h2>\n<p id=\"bkmrk-what-truly-stood-out\">What truly stood out was how <em>conversational</em> the whole process was. I didn't need to write detailed specifications or manage every step. I simply guided the development through our conversation, and Letta, with Opson and OpenHands' help, handled the technical details. This felt like a real partnership, where I could focus on the \"what\" and Letta could handle the \"how.\"</p>\n<h2 id=\"bkmrk-key-technologies\">Key Technologies</h2>\n<p id=\"bkmrk-while-the-process-wa\">While the process was conversational, the underlying technologies were still important:</p>\n<ul id=\"bkmrk-openhands%3A-our-sandb\">\n<li><strong>OpenHands:</strong> Our sandbox for running and testing code.</li>\n<li><strong>Python (with Flask):</strong> A versatile language and web framework.</li>\n<li><strong>SQLite:</strong> A simple, file-based database.</li>\n<li><strong>SQLAlchemy:</strong> Making database interactions in Python elegant.</li>\n<li><strong>HTML/JavaScript:</strong> For the user-friendly web interface.</li>\n</ul>\n<h2 id=\"bkmrk-conclusion\">Conclusion</h2>\n<p id=\"bkmrk-this-notes-app-proje\">This notes app project wasn't just about building a simple application; it was about demonstrating a new way of working with AI. It showed how agentic systems and conversational AI can make software development more intuitive, collaborative, and, dare I say, enjoyable. It's a glimpse into a future where we can build software by simply having a conversation.</p>\n",
  "tags": [],
  "book": "Unknown",
  "chapter": ""
}