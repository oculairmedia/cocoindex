{
  "id": 133,
  "title": "Vector Store (Neo4j)",
  "slug": "vector-store-neo4j",
  "url": "https://knowledge.oculair.ca/books/unknown/page/vector-store-neo4j",
  "updated_at": "2025-05-29T02:33:28.000000Z",
  "body_html": "<h3 id=\"bkmrk-vector-store%3A-neo4j\">Vector Store: Neo4j</h3>\n<p id=\"bkmrk-role%3A-neo4j-serves-a\"><strong>Role:</strong> Neo4j serves as the vector store for the RAG pipeline, responsible for persistently storing the generated document embeddings and facilitating efficient semantic search.</p>\n<p id=\"bkmrk-functionality%3A\"><strong>Functionality:</strong></p>\n<ul id=\"bkmrk-embedding-storage%3A-s\">\n<li><strong>Embedding Storage:</strong> Stores the numerical vector representations (embeddings) of text chunks generated by Haystack.</li>\n<li><strong>Graph Database Capabilities:</strong> Leverages Neo4j's native graph database features to not only store embeddings but also to establish relationships between document chunks, entities, and concepts. This allows for more sophisticated contextual retrieval beyond simple semantic similarity.</li>\n<li><strong>Cross-linking with Graphiti:</strong> The strategic choice of Neo4j enables seamless integration and cross-linking with the existing Graphiti knowledge graph, which also uses Neo4j as its backbone. This creates a unified and interconnected knowledge base.</li>\n<li><strong>Efficient Retrieval:</strong> Supports fast and scalable retrieval of relevant document chunks based on vector similarity search, as well as graph-based queries.</li>\n</ul>\n<p id=\"bkmrk-integration-within-t\"><strong>Integration within the Pipeline:</strong> Neo4j receives embeddings from Haystack. It acts as the primary knowledge repository that Haystack queries to retrieve relevant context for the Letta agents. The ability to combine vector search with graph traversals in Neo4j significantly enhances the precision and richness of the contextual information provided to the agents, leading to more informed and accurate responses.</p>\n",
  "tags": [],
  "book": "Unknown",
  "chapter": ""
}