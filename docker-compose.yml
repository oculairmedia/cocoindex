version: '3.8'

services:
  # FalkorDB - Graph Database
  falkordb:
    image: falkordb/falkordb:latest
    container_name: falkordb
    ports:
      - "6379:6379"
    volumes:
      - falkor_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL - CocoIndex Backend
  postgres:
    image: postgres:15
    container_name: cocoindex_postgres
    environment:
      POSTGRES_DB: cocoindex
      POSTGRES_USER: cocoindex
      POSTGRES_PASSWORD: cocoindex
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cocoindex"]
      interval: 30s
      timeout: 10s
      retries: 3

  # BookStack Pipeline - Enhanced Extraction
  bookstack-pipeline:
    build: .
    container_name: bookstack_pipeline
    depends_on:
      falkordb:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      # FalkorDB Configuration
      FALKOR_HOST: falkordb
      FALKOR_PORT: 6379
      FALKOR_GRAPH: graphiti_migration
      
      # PostgreSQL Configuration (for CocoIndex)
      COCOINDEX_DATABASE_URL: postgresql://cocoindex:cocoindex@postgres:5432/cocoindex
      
      # BookStack Configuration (set these in .env file)
      BS_URL: ${BS_URL}
      BS_TOKEN_ID: ${BS_TOKEN_ID}
      BS_TOKEN_SECRET: ${BS_TOKEN_SECRET}
      
      # Pipeline Configuration
      PIPELINE_MODE: ${PIPELINE_MODE:-enhanced}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    volumes:
      - ./bookstack_export_full:/app/bookstack_export_full
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["/usr/local/bin/docker-healthcheck.sh"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 120s

  # Optional: Ollama for local LLM (if not using external Ollama)
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    profiles:
      - ollama  # Only start with --profile ollama

volumes:
  falkor_data:
  postgres_data:
  ollama_data: