{
  "id": 117,
  "title": "Data Synchronization Process",
  "slug": "data-synchronization-process",
  "url": "https://knowledge.oculair.ca/books/unknown/page/data-synchronization-process",
  "updated_at": "2025-05-06T16:27:05.000000Z",
  "body_html": "<h1 id=\"bkmrk-data-synchronization\">Data Synchronization Process</h1>\n<h2 id=\"bkmrk-overview\">Overview</h2>\n<p id=\"bkmrk-the-bookstack-graphi\">The BookStack-Graphiti integration includes a robust data synchronization mechanism that ensures all content from BookStack is accurately represented in the Graphiti knowledge graph. This synchronization happens in two ways:</p>\n<ol id=\"bkmrk-initial-data-loading\">\n<li><strong>Initial Data Loading</strong>: A bulk synchronization process that loads all existing content from BookStack into Graphiti</li>\n<li><strong>Incremental Updates</strong>: Real-time updates triggered by webhooks when content changes in BookStack</li>\n</ol>\n<p id=\"bkmrk-this-chapter-explain\">This chapter explains how the synchronization process works, how to manage it, and how to troubleshoot common issues.</p>\n<h2 id=\"bkmrk-initial-data-synchro\">Initial Data Synchronization</h2>\n<h3 id=\"bkmrk-purpose\">Purpose</h3>\n<p id=\"bkmrk-the-initial-data-syn\">The initial data synchronization is designed to:</p>\n<ul id=\"bkmrk-load-all-existing-co\">\n<li>Load all existing content from BookStack into Graphiti when the integration is first set up</li>\n<li>Rebuild the knowledge graph after a reset or data loss</li>\n<li>Ensure consistency between BookStack and Graphiti</li>\n</ul>\n<h3 id=\"bkmrk-implementation\">Implementation</h3>\n<p id=\"bkmrk-the-initial-synchron\">The initial synchronization is implemented in <code>sync_bookstack_data.py</code>, which:</p>\n<ol id=\"bkmrk-connects-to-the-book\">\n<li>Connects to the BookStack API using the configured credentials</li>\n<li>Fetches all bookshelves, books, chapters, and pages with pagination support</li>\n<li>Creates corresponding nodes and relationships in the Graphiti knowledge graph</li>\n<li>Maintains a cache to avoid reprocessing unchanged items</li>\n</ol>\n<h3 id=\"bkmrk-running-initial-sync\">Running Initial Synchronization</h3>\n<p id=\"bkmrk-the-initial-synchron-1\">The initial synchronization can be triggered in several ways:</p>\n<h4 id=\"bkmrk-manual-execution\">Manual Execution</h4>\n<pre id=\"bkmrk-python-sync_bookstac\"><code class=\"language-bash\">python sync_bookstack_data.py\n</code></pre>\n<p id=\"bkmrk-this-command-runs-th\">This command runs the synchronization script directly, which is useful for testing or troubleshooting.</p>\n<h4 id=\"bkmrk-docker-container-sta\">Docker Container Startup</h4>\n<p id=\"bkmrk-when-using-docker%2C-t\">When using Docker, the initial synchronization can be configured to run automatically when the container starts:</p>\n<pre id=\"bkmrk-%23-in-docker-compose.\"><code class=\"language-yaml\"># In docker-compose.yml\nenvironment:\n  - ENABLE_SYNC=true\n</code></pre>\n<p id=\"bkmrk-setting-enable_sync%3D\">Setting <code>ENABLE_SYNC=true</code> in the environment variables or <code>.env</code> file will trigger the synchronization when the container starts.</p>\n<h3 id=\"bkmrk-synchronization-proc\">Synchronization Process</h3>\n<p id=\"bkmrk-the-synchronization-\">The synchronization follows these steps:</p>\n<ol id=\"bkmrk-fetch-bookshelves%3A-r\">\n<li><strong>Fetch Bookshelves</strong>: Retrieve all bookshelves from BookStack</li>\n<li><strong>Fetch Books</strong>: Retrieve all books from BookStack</li>\n<li><strong>Fetch Chapters</strong>: Retrieve all chapters from BookStack</li>\n<li><strong>Fetch Pages</strong>: Retrieve all pages from BookStack</li>\n<li><strong>Process Entities</strong>: For each entity:\n<ul>\n<li>Check if it has changed since the last synchronization (using the cache)</li>\n<li>If changed, create or update the corresponding node in Graphiti</li>\n<li>Create relationships between entities (e.g., page belongs to chapter)</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"bkmrk-caching-mechanism\">Caching Mechanism</h3>\n<p id=\"bkmrk-to-improve-performan\">To improve performance and avoid unnecessary processing, the synchronization process uses a file-based cache:</p>\n<ul id=\"bkmrk-cache-file%3A-bookstac\">\n<li><strong>Cache File</strong>: <code>bookstack_sync_cache.json</code></li>\n<li><strong>Cache Key</strong>: Combination of entity type, ID, and updated timestamp</li>\n<li><strong>Cache Value</strong>: The timestamp when the entity was last processed</li>\n</ul>\n<p id=\"bkmrk-this-allows-the-sync\">This allows the synchronization to skip entities that haven't changed since the last run.</p>\n<h2 id=\"bkmrk-incremental-updates\">Incremental Updates</h2>\n<h3 id=\"bkmrk-purpose-1\">Purpose</h3>\n<p id=\"bkmrk-incremental-updates-\">Incremental updates ensure that changes made in BookStack are immediately reflected in the Graphiti knowledge graph, without requiring a full resynchronization.</p>\n<h3 id=\"bkmrk-implementation-1\">Implementation</h3>\n<p id=\"bkmrk-incremental-updates--1\">Incremental updates are implemented through the webhook mechanism:</p>\n<ol id=\"bkmrk-bookstack-sends-a-we\">\n<li>BookStack sends a webhook notification when content is created, updated, or deleted</li>\n<li>The webhook receiver (<code>webhook_receiver.py</code>) validates and processes the webhook payload</li>\n<li>The event processor (<code>event_processor.py</code>) extracts the relevant data and updates the Graphiti knowledge graph</li>\n</ol>\n<h3 id=\"bkmrk-event-processing\">Event Processing</h3>\n<p id=\"bkmrk-the-event-processor-\">The event processor handles different types of events:</p>\n<h4 id=\"bkmrk-page-events\">Page Events</h4>\n<ul id=\"bkmrk-page.created%3A-a-new-\">\n<li><strong>page.created</strong>: A new page is created in BookStack</li>\n<li><strong>page.updated</strong>: An existing page is updated in BookStack</li>\n<li><strong>page.deleted</strong>: A page is deleted from BookStack</li>\n</ul>\n<h4 id=\"bkmrk-chapter-events\">Chapter Events</h4>\n<ul id=\"bkmrk-chapter.created%3A-a-n\">\n<li><strong>chapter.created</strong>: A new chapter is created in BookStack</li>\n<li><strong>chapter.updated</strong>: An existing chapter is updated in BookStack</li>\n<li><strong>chapter.deleted</strong>: A chapter is deleted from BookStack</li>\n</ul>\n<h4 id=\"bkmrk-book-events\">Book Events</h4>\n<ul id=\"bkmrk-book.created%3A-a-new-\">\n<li><strong>book.created</strong>: A new book is created in BookStack</li>\n<li><strong>book.updated</strong>: An existing book is updated in BookStack</li>\n<li><strong>book.deleted</strong>: A book is deleted from BookStack</li>\n</ul>\n<h4 id=\"bkmrk-bookshelf-events\">Bookshelf Events</h4>\n<ul id=\"bkmrk-bookshelf.created%3A-a\">\n<li><strong>bookshelf.created</strong>: A new bookshelf is created in BookStack</li>\n<li><strong>bookshelf.updated</strong>: An existing bookshelf is updated in BookStack</li>\n<li><strong>bookshelf.deleted</strong>: A bookshelf is deleted from BookStack</li>\n</ul>\n<h3 id=\"bkmrk-event-handling-proce\">Event Handling Process</h3>\n<p id=\"bkmrk-for-each-event%2C-the-\">For each event, the processor:</p>\n<ol id=\"bkmrk-identifies-the-event\">\n<li>Identifies the event type from the webhook payload</li>\n<li>Extracts the entity data (e.g., page, book, chapter, bookshelf)</li>\n<li>Creates or updates the corresponding node in Graphiti</li>\n<li>Creates or updates relationships between entities</li>\n<li>Handles any error conditions and ensures data consistency</li>\n</ol>\n<h2 id=\"bkmrk-data-model-and-relat\">Data Model and Relationships</h2>\n<h3 id=\"bkmrk-entity-types\">Entity Types</h3>\n<p id=\"bkmrk-the-integration-maps\">The integration maps BookStack entities to Graphiti nodes:</p>\n<ul id=\"bkmrk-bookshelf%3A-top-level\">\n<li><strong>Bookshelf</strong>: Top-level container for books</li>\n<li><strong>Book</strong>: Collection of pages and chapters</li>\n<li><strong>Chapter</strong>: Organizational grouping of pages within a book</li>\n<li><strong>Page</strong>: Individual document containing content</li>\n</ul>\n<h3 id=\"bkmrk-relationship-types\">Relationship Types</h3>\n<p id=\"bkmrk-the-integration-crea\">The integration creates relationships between entities:</p>\n<ul id=\"bkmrk-belongs_to%3A-hierarch\">\n<li><strong>BELONGS_TO</strong>: Hierarchical relationship (e.g., Page \u2192 Chapter \u2192 Book \u2192 Bookshelf)</li>\n<li><strong>CREATED_BY/UPDATED_BY</strong>: User attribution relationships</li>\n<li><strong>TAGGED_WITH</strong>: Connections to categorization tags</li>\n</ul>\n<h3 id=\"bkmrk-example-relationship\">Example Relationship Creation</h3>\n<pre id=\"bkmrk-%23-create-a-relations\"><code class=\"language-python\"># Create a relationship between page and book\nbook_relationship = BookPageRelationship(\n    source_uuid=page_id,\n    source_name=page_data.get('name', ''),\n    target_uuid=book_id,\n    target_name=page_data.get('book_name', '')\n)\n\n# If the page belongs to a chapter, create that relationship too\nif chapter_id:\n    chapter_relationship = ChapterPageRelationship(\n        source_uuid=page_id,\n        source_name=page_data.get('name', ''),\n        target_uuid=str(chapter_id),\n        target_name=page_data.get('chapter_name', '')\n    )\n</code></pre>\n<h2 id=\"bkmrk-managing-synchroniza\">Managing Synchronization</h2>\n<h3 id=\"bkmrk-controlling-initial-\">Controlling Initial Sync</h3>\n<p id=\"bkmrk-the-initial-synchron-2\">The initial synchronization can be controlled through the <code>ENABLE_SYNC</code> environment variable:</p>\n<ul id=\"bkmrk-enable_sync%3Dtrue%3A-ru\">\n<li><code>ENABLE_SYNC=true</code>: Run the initial synchronization on startup</li>\n<li><code>ENABLE_SYNC=false</code>: Skip the initial synchronization</li>\n</ul>\n<p id=\"bkmrk-this-is-particularly\">This is particularly useful for:</p>\n<ul id=\"bkmrk-first-time-deploymen\">\n<li>First-time deployments (enable sync)</li>\n<li>Restarting after a crash (disable sync to avoid duplicate data)</li>\n<li>Testing webhook functionality (disable sync for faster startup)</li>\n</ul>\n<h3 id=\"bkmrk-forcing-a-resynchron\">Forcing a Resynchronization</h3>\n<p id=\"bkmrk-to-force-a-complete-\">To force a complete resynchronization:</p>\n<ol id=\"bkmrk-stop-the-webhook-rec\">\n<li>Stop the webhook receiver</li>\n<li>Delete the cache file: <code>rm bookstack_sync_cache.json</code></li>\n<li>Restart the webhook receiver with <code>ENABLE_SYNC=true</code></li>\n</ol>\n<p id=\"bkmrk-this-will-cause-all-\">This will cause all entities to be reprocessed, regardless of whether they've changed.</p>\n<h3 id=\"bkmrk-monitoring-synchroni\">Monitoring Synchronization</h3>\n<p id=\"bkmrk-the-synchronization--1\">The synchronization process logs detailed information about its progress:</p>\n<pre id=\"bkmrk-%23-view-logs-in-docke\"><code class=\"language-bash\"># View logs in Docker\ndocker-compose logs -f\n\n# View logs when running locally\ntail -f webhook_receiver.log\n</code></pre>\n<p id=\"bkmrk-look-for-log-message\">Look for log messages indicating successful synchronization, such as:</p>\n<pre id=\"bkmrk-info---bookstack-dat\"><code>INFO - BookStack data synchronization completed successfully\n</code></pre>\n<h2 id=\"bkmrk-troubleshooting\">Troubleshooting</h2>\n<h3 id=\"bkmrk-common-issues\">Common Issues</h3>\n<h4 id=\"bkmrk-synchronization-fail\">Synchronization Fails to Start</h4>\n<ul id=\"bkmrk-check-that-the-enabl\">\n<li>Check that the <code>ENABLE_SYNC</code> environment variable is set to <code>true</code></li>\n<li>Verify that the BookStack API credentials are correct</li>\n<li>Ensure the BookStack instance is accessible from the integration server</li>\n</ul>\n<h4 id=\"bkmrk-synchronization-take\">Synchronization Takes Too Long</h4>\n<ul id=\"bkmrk-check-the-network-co\">\n<li>Check the network connection between the integration server and BookStack</li>\n<li>Consider increasing the batch size for API requests</li>\n<li>Verify that the Graphiti instance is responsive</li>\n</ul>\n<h4 id=\"bkmrk-entities-missing-fro\">Entities Missing from Graphiti</h4>\n<ul id=\"bkmrk-check-if-the-entity-\">\n<li>Check if the entity was created after the initial synchronization</li>\n<li>Verify that webhooks are properly configured in BookStack</li>\n<li>Check the webhook receiver logs for any errors processing the entity</li>\n</ul>\n<h3 id=\"bkmrk-debugging-techniques\">Debugging Techniques</h3>\n<h4 id=\"bkmrk-checking-the-cache\">Checking the Cache</h4>\n<p id=\"bkmrk-examine-the-cache-fi\">Examine the cache file to see which entities have been processed:</p>\n<pre id=\"bkmrk-cat-bookstack_sync_c\"><code class=\"language-bash\">cat bookstack_sync_cache.json\n</code></pre>\n<p id=\"bkmrk-the-cache-file-conta\">The cache file contains entries like:</p>\n<pre id=\"bkmrk-%7B-%22book%3A1%22%3A-%222024-01\"><code class=\"language-json\">{\n  \"Book:1\": \"2024-01-15T10:00:00Z\",\n  \"Page:1\": \"2024-01-15T10:00:00Z\"\n}\n</code></pre>\n<p id=\"bkmrk-each-entry-represent\">Each entry represents an entity that has been processed, with the timestamp of when it was last updated in BookStack.</p>\n<h4 id=\"bkmrk-testing-with-sample-\">Testing with Sample Data</h4>\n<p id=\"bkmrk-use-the-test-script-\">Use the test script to send sample webhook payloads:</p>\n<pre id=\"bkmrk-python-test_bookstac\"><code class=\"language-bash\">python test_bookstack_webhook.py\n</code></pre>\n<p id=\"bkmrk-this-can-help-verify\">This can help verify that the webhook receiver and event processor are working correctly.</p>\n<h4 id=\"bkmrk-manually-triggering-\">Manually Triggering Synchronization</h4>\n<p id=\"bkmrk-run-the-synchronizat\">Run the synchronization script with verbose logging:</p>\n<pre id=\"bkmrk-python--m-logging%3Dde\"><code class=\"language-bash\">python -m logging=DEBUG sync_bookstack_data.py\n</code></pre>\n<p id=\"bkmrk-this-will-show-detai\">This will show detailed information about the synchronization process, including API requests and responses.</p>\n<h2 id=\"bkmrk-best-practices\">Best Practices</h2>\n<h3 id=\"bkmrk-initial-deployment\">Initial Deployment</h3>\n<ol id=\"bkmrk-set-enable_sync%3Dtrue\">\n<li>Set <code>ENABLE_SYNC=true</code> for the first deployment</li>\n<li>Monitor the logs to ensure all entities are synchronized</li>\n<li>Verify that webhooks are properly configured in BookStack</li>\n</ol>\n<h3 id=\"bkmrk-routine-operation\">Routine Operation</h3>\n<ol id=\"bkmrk-set-enable_sync%3Dfals\">\n<li>Set <code>ENABLE_SYNC=false</code> for routine operation</li>\n<li>Rely on webhooks for incremental updates</li>\n<li>Periodically check the logs for any errors or issues</li>\n</ol>\n<h3 id=\"bkmrk-disaster-recovery\">Disaster Recovery</h3>\n<ol id=\"bkmrk-if-the-graphiti-know\">\n<li>If the Graphiti knowledge graph is lost or corrupted:\n<ul>\n<li>Delete the cache file</li>\n<li>Set <code>ENABLE_SYNC=true</code></li>\n<li>Restart the integration</li>\n</ul>\n</li>\n<li>Monitor the logs to ensure all entities are resynchronized</li>\n</ol>\n<h3 id=\"bkmrk-performance-optimiza\">Performance Optimization</h3>\n<ol id=\"bkmrk-use-the-cache-to-avo\">\n<li>Use the cache to avoid reprocessing unchanged entities</li>\n<li>Consider running the initial synchronization during off-peak hours</li>\n<li>Optimize the webhook receiver to handle events efficiently</li>\n</ol>\n",
  "tags": [],
  "book": "BookStack-Graphiti Integration",
  "chapter": ""
}